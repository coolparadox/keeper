dropdb -U postgres keeper
createdb -U postgres keeper
psql -U postgres keeper

BEGIN;
CREATE TABLE blob(id SERIAL PRIMARY KEY, size integer NOT NULL);
CREATE TABLE mime(id SERIAL PRIMARY KEY, mime text NOT NULL UNIQUE);
CREATE TABLE blob_attr(blob_id integer UNIQUE NOT NULL REFERENCES blob(id), mime_id integer REFERENCES mime(id), file_extension text, modified_date date);
CREATE TABLE chunk(id SERIAL PRIMARY KEY, value text NOT NULL UNIQUE);
CREATE TABLE blob_chunk(blob_id integer REFERENCES blob(id), piece_index integer NOT NULL, chunk_id integer REFERENCES chunk(id), PRIMARY KEY(blob_id, piece_index));
CREATE TABLE label(id SERIAL PRIMARY KEY, value varchar(256) NOT NULL UNIQUE, CONSTRAINT label_ascii CHECK(value ~ '^[[:ascii:]]+$'), CONSTRAINT label_nonblank CHECK(value ~ '^[^[:space:]]+$'));
CREATE TABLE blob_label(blob_id integer REFERENCES blob(id), label_id integer REFERENCES label(id), PRIMARY KEY(blob_id, label_id));
COMMIT;

./src/acquire2sql | psql -b -t -q --csv -U postgres keeper

BEGIN;
INSERT INTO mime(mime) VALUES('application/pdf') ON CONFLICT(mime) DO NOTHING;
INSERT INTO blob(mime,modified,size) SELECT m.id,'2023-06-08',252073 FROM mime m WHERE m.mime='application/pdf';
CREATE TEMPORARY SEQUENCE blobs_chunks_seq_seq AS integer;
INSERT INTO chunk(chunk) VALUES('SGVsbG8gd29ybGQhCg==') ON CONFLICT(chunk) DO NOTHING;
INSERT INTO blob_chunk(blob,chunk,seq) SELECT b.last_value, c.id,
nextval('blobs_chunks_seq_seq') FROM blobs_id_seq b, chunk c WHERE c.chunk='SGVsbG8gd29ybGQhCg==';
INSERT INTO chunk(chunk) VALUES('SGkgdGhlcmUuLi4K') ON CONFLICT(chunk) DO NOTHING;
INSERT INTO blob_chunk(blob,chunk,seq) SELECT b.last_value, c.id,
nextval('blobs_chunks_seq_seq') FROM blobs_id_seq b, chunk c WHERE c.chunk='SGkgdGhlcmUuLi4K';
DROP SEQUENCE blobs_chunks_seq_seq;
INSERT INTO tags(tag) VALUES('jasper') ON CONFLICT(tag) DO NOTHING;
INSERT INTO blobs_tags(blob,tag) SELECT b.last_value, t.id FROM blobs_id_seq b, tags t WHERE t.tag='jasper' ON CONFLICT(blob,tag) DO NOTHING;
INSERT INTO blobs_tags(blob,tag) SELECT b.last_value, t.id FROM blobs_id_seq b, tags t WHERE t.tag='rehab' ON CONFLICT(blob,tag) DO NOTHING;
COMMIT;

====

create blob from <file> [with tags <tag1> <tag2> <tag3>]
[un]tag blob <id> with <tag1> <tag2> <tag3>
list blobs
list tags
describe blob <id>
describe tag <tag>
drop blob <id>

====

help [<command>]

acquire <mimetype> [stuff]
describe [stuff] <id>
forget [stuff] <id>

[un]label [stuff] <id> [<label>...]
describe label <label>

list [stuff|labels]

====

acquire
catalog
recover <ID>
forget <ID>
set <ID> mime <MIME>
set <ID> extension <EXTENSION>
set <ID> date <DATE>
[un]label <ID> <LABEL1> [<LABEL2> ...]
describe [mime|ext|date|label] <TEXT>

====

